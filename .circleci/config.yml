version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build-and-test:
    executor:
      name: node/default
    working_directory: ~/mms
    steps:
      - checkout

      - setup_remote_docker

      - run: 
          name: "Create and start all services from the docker-compose configuration."
          command: |
            cp example/src/main/resources/application.properties.example ./example/src/main/resources/application.properties
            docker-compose build --no-rm
            docker exec mms_mms find /mms/ -name '*jar' -exec cp -a -t ~/mms/temp {} +
            docker-compose run -d --name mms_mms_1 mms

      #- run:
          #name: "Prepare Store Artifacts"
          #command: mkdir -p tmp/artifacts

      #- store_artifacts:
          #path: ~/mms/permissions/permissions.gradle
          #destination: ~/mms/tmp/artifacts/permissions
    #- run: sleep 30s
      - run: cd ~/mms && cd temp && ls

      - run: 
          name: "Run and test Postman Collection."
          command: |
            cd ~/mms/example
            IP_VAR=`docker inspect --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mms_mms_1`
            sed -i "s/localhost/$IP_VAR/" test-env.json
            docker create -v /tst --name mms_test_configs alpine:3.4 /bin/true
            docker cp ~/mms/example/. mms_test_configs:/tst
            docker run --volumes-from mms_test_configs --link mms_mms_1 --network=mms_default -t postman/newman run /tst/crud.postman_collection.json -e /tst/test-env.json --delay-request 300
      - run:
          command: |
            curl -fL https://getcli.jfrog.io | sh
            ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_APIKEY
            ./jfrog rt u '~/mms/tmp/artifacts/' libs-release-local/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
  
workflows:
    version: 2
    build-and-test:
      jobs:
        - build-and-test
