version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build-and-test:
    executor:
      name: node/default
    working_directory: ~/mms
    steps:
      - checkout
      - setup_remote_docker
      - run: cd ~/mms && cp example/src/main/resources/application.properties.example ./example/src/main/resources/application.properties
      - run: cd ~/mms && docker-compose build
      #- run: cd ~/mms && docker run -p 8080 --name mms_mms_1 mms_mms:latest --network="bridge" 
      - run: cd ~/mms && docker-compose run -d -p 8080 --name mms_mms_1 mms
      #- run: cd ~/mms && sleep 2m
      #- run: cd ~/mms && docker network ls
      #- run: cd ~/mms && docker network inspect mms_default
      # create a dummy container which will hold a volume with config
    #docker create -v /cfg --name configs alpine:3.4 /bin/true
    # copy a config file into this volume
   # docker cp path/in/your/source/code/app_config.yml configs:/cfg
    # start an application container using this volume
    #docker run --volumes-from configs app-image:1.2.3
      - run: 
          command: |
            cd 
            pwd
            ls
            mkdir tst
            cd
            ls
            cd mms
            docker create -v "$(pwd)":/tst --name test mms_mms:latest
            cd
            cd tst
            ls
        #docker run --network mms_default --volumes-from test --workdir ~/tst -t postman/newman \
        #run crud.postman_collection.json -e test-env.json --delay-request 300
      - run: cd ~/mms && docker ps
      - run: 
          command: |
            docker pull postman/newman
            docker create --name test mms_mms:latest /bin/true
            docker cp ~/mms/example/ test:/mms/example/
            docker run --network mms_default --volumes-from test:/etc/newman -t postman/newman run mms/example/etc/newman/crud.postman_collection.json -e mms/example/etc/newman/test-env.json --delay-request 300
      #scp user@host:/path/to/file /local/path
     # scp -r ~/mms/example/test-env.json DOCKER_MACHINE_NAME:/mms/example/test-env.json
      #docker cp ~/mms/example/test-env.json mms_mms_1:/mms/example/test-env.json
      #docker run --volumes-from test -t postman/newman run crud.postman_collection.json -e test-env.json --delay-request 300
      #docker create -v /tst --name test mms_mms:latest
      #docker cp example/test-env.json test:/tst/test-env.json 
     #- run: cd ~/mms && docker run --network container:mms_mms_1 appropriate/curl --connect-timeout 30 --retry 300 --retry-delay 10 --retry-connrefused http://localhost:8080
     # - run cd ~/mms && docker exec mms_mms_1 curl --retry 30 --retry-delay 10 --retry-connrefused http://localhost:8080
     # - run: 
     #     command: |
     #       cd ~/mms/example
     #       sudo npm install -g newman
     #       sudo newman run crud.postman_collection.json -e test-env.json --delay-request 300
     #docker cp mms_mms_1:~/example/test-env.json /etc/newman
     #docker cp ~/mms/example/test-env.json mms_mms_1:/etc/newman
     #docker cp mms_mms_1:/example/test-env.json ~/mms/example
    #docker pull postman/newman
workflows:
    version: 2
    build-and-test:
      jobs:
        - build-and-test
#        - run: 
 #         command: | 
  #            docker pull postman/newman
  #            cd ~/mms/example
   #           docker run -v ~/mms/example:/etc/newman -t postman/newman run crud.postman_collection.json -e test-env.json --delay-request 300