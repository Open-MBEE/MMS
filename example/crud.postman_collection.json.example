{
	"info": {
		"_postman_id": "fdddbcd1-78bb-475b-967a-eb4f148bfd7f",
		"name": "crud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login using admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8549a6d-6c1b-44c9-925e-5111a2074509",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});",
							"",
							"pm.test(\"response has token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.environment.set(\"token\", jsonData.token);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{adminUsername}}\",\n\t\"password\": \"{{adminPassword}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/authentication",
					"host": [
						"{{host}}"
					],
					"path": [
						"authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a80c156-c5df-4ba9-9afd-65ab7e6c0d10",
						"exec": [
							"pm.test(\"response has org a\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql('a');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"id\": \"a\",\n\t\t\t\"name\": \"a\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get orgs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ece8a0c4-3c55-42db-b0c8-68752373e71d",
						"exec": [
							"pm.test(\"response has at least 1 org\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs.length).to.be.at.least(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "329e65e4-272b-4213-85d0-eac3f93a24f6",
						"exec": [
							"pm.test(\"response has project aa\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('aa');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"aa\", \n\t\t\t\"name\": \"aa\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to add invalid project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "923b8fb6-4183-4187-8fc8-b22d54eddb37",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"invalid project\", \n\t\t\t\"name\": \"invalid project\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02e550aa-5cfa-4f63-9a52-f4cf85ee0269",
						"exec": [
							"pm.test(\"response has at least 1 project\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects.length).to.be.at.least(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "update project aa metadata",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f63b245a-3dfc-4888-b4fa-c3a71f46706f",
						"exec": [
							"pm.test(\"response has project aa\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('aa');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"aa\", \n\t\t\t\"extraField\": \"something\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4bc305da-da10-4f86-b5de-799c679861c7",
						"exec": [
							"pm.test(\"response has project aa with extra field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].extraField).to.eql('something');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa"
					]
				}
			},
			"response": []
		},
		{
			"name": "add elements to aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8406a1d0-a871-4653-b8bc-7ce3abf72792",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"});",
							"",
							"pm.environment.set(\"commitId1\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"x\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23800f47-0ef1-49b9-aed2-a4e21aa6923e",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});",
							"",
							"pm.environment.set(\"commitId2\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated1\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x and y",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bef898ac-41f0-4cca-94c1-b160271314b2",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitId3\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated2\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\",\n\t\t\t\"name\": \"updated2\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7d1e32b-c0cd-4f03-8442-b69c9f7482b4",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});",
							"",
							"pm.environment.set(\"commitId4\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated3\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "check ref commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b45d2c56-fbc1-4af4-9b49-19d154aa7ea0",
						"exec": [
							"pm.test(\"response has 4 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check x commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1e31f0c-0b67-4b10-87b0-a2d9ef2b6e1e",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/x/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"x",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check y commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e29138c-54c1-4c2b-a9b4-d591e73b0687",
						"exec": [
							"pm.test(\"response has 2 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/y/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"y",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check z commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d059475b-01b7-447a-841f-71ef4762465a",
						"exec": [
							"pm.test(\"response has 2 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/z/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"z",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check first commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c539cd73-d474-4afc-970c-2e2bdc3a8c84",
						"exec": [
							"pm.test(\"first commit has 3 added\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].added.length).to.eql(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/commits/{{commitId1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"commits",
						"{{commitId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get elements at second update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12d4fccf-a254-44d7-8ccb-15578ac0b130",
						"exec": [
							"pm.test(\"elements have expected names\", function () {",
							"    var jsonData = pm.response.json();",
							"    for (var e in jsonData.elements) {",
							"        var el = jsonData.elements[e];",
							"        if (el.id == 'x') {",
							"            pm.expect(el.name == 'updated2');",
							"        }",
							"        if (el.id == 'y') {",
							"            pm.expect(el.name == 'updated2');",
							"        }",
							"        if (el.id == 'z') {",
							"            pm.expect(el.name == 'z');",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements?commitId={{commitId3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					],
					"query": [
						{
							"key": "commitId",
							"value": "{{commitId3}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef77e81f-062f-46d0-b37c-1c35332da1d3",
						"exec": [
							"pm.test(\"branch created with right parentRef and commit id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('refa');",
							"    pm.expect(jsonData.refs[0].parentRefId).to.eql('master');",
							"    pm.expect(jsonData.refs[0].parentCommitId).to.eql(pm.environment.get(\"commitId4\"))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"refa\",\n\t\t\t\"name\": \"refa\",\n\t\t\t\"type\": \"Branch\",\n\t\t\t\"extraField\": \"something\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get branch refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62236b2c-c8f5-446b-8bc4-2e133be2cb2f",
						"exec": [
							"pm.test(\"branch refa has extraField\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].extraField).to.eql('something');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa"
					]
				}
			},
			"response": []
		},
		{
			"name": "create invalid branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb90e37b-619e-4ee6-99aa-4ccfac1fd431",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"invalid branch id\",\n\t\t\t\"name\": \"invalid branch\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch ref-a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "55278a54-dae2-457f-8bd3-3a86fb6a7b70",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"ref-a\",\n\t\t\t\"name\": \"ref-a\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch ref-b from ref-a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f530d376-8d79-4a4e-a927-7cee16d560a1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"ref-b\",\n\t\t\t\"name\": \"ref-b\",\n\t\t\t\"type\": \"Branch\",\n\t\t\t\"parentRefId\": \"ref-a\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "check inRefIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80e4d103-9c3c-431f-b5bb-2b48d774cd83",
						"exec": [
							"pm.test(\"elements in new ref have right _inRefIds\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.elements.forEach(function(e) {",
							"        pm.expect(e._inRefIds).to.include('refa');",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x and y on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "38d5c674-ce11-4721-8927-21a8a336d103",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitXYRef\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated4\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\",\n\t\t\t\"name\": \"updated4\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z on refa and add element q",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e62d3d43-eacd-409f-82e8-bf9e87c7c10b",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitZQRef\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated5\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"q\",\n\t\t\t\"name\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z on master and add element p",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c0729c5-daa2-411b-9582-0f953f0cca96",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitZP\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated6\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"p\",\n\t\t\t\"name\": \"p\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "check master commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8d96814-0c96-4691-ab15-ff2b413541a0",
						"exec": [
							"pm.test(\"response has 5 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(5);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZP\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[4].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check refa commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "82290c8e-b39d-4f66-8642-037054c9d954",
						"exec": [
							"pm.test(\"response has 6 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(6);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZQRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[4].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[5].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check x commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa4c5c81-836d-4fb7-accb-6fff960104f1",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check y commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40cea579-3c72-49ec-810d-c97748f7c602",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/y/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"y",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check z commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e392aae-f5e2-466c-aff8-140324e140d3",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZQRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/z/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"z",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest elements at refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "372fcc3e-8151-444d-b925-c298043f7a65",
						"exec": [
							"pm.test(\"has 4 results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest elements at master",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a10acd56-ba0e-49cc-a154-7c3a9a794e7e",
						"exec": [
							"pm.test(\"has 4 results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get mix of elements at master with missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "118b1894-cc6a-41c9-937f-e8750a032937",
						"exec": [
							"pm.test(\"has 3 results and 1 rejected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"    pm.expect(jsonData.rejected.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get mix of elements at refa with commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3969545-c3b4-4bd3-9aaa-f27da008b4cd",
						"exec": [
							"pm.test(\"has 3 results and 2 rejected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"    pm.expect(jsonData.rejected.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}, {\n\t\t\t\"id\": \"p\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements?commitId={{commitXYRef}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					],
					"query": [
						{
							"key": "commitId",
							"value": "{{commitXYRef}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8b0879-4c80-4307-a366-f8d51ebc40e6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "get x on refa deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21a90484-af51-4524-9268-7f65c9054e0e",
						"exec": [
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "resurrect x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "582b1ca5-9339-4f2b-b5d0-43f2deb72b3c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response has element\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated4\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get resurrected x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75b9215a-f2ad-4630-932c-0c5e03d86d1a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response has element\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "add ownerId for cameo element on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abae1493-65ea-48c1-9f45-e02b81225b4d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated7\",\n\t\t\t\"ownerId\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f1aacca5-9e2f-486a-9853-81ebb369c7cb",
						"exec": [
							"pm.test(\"response has org a\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql('b');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"id\": \"b\",\n\t\t\t\"name\": \"b\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project cc under org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e36355c-73ef-4fa3-834e-f9db764f83d7",
						"exec": [
							"pm.test(\"response has project cc\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"cc\", \n\t\t\t\"name\": \"cc\",\n\t\t\t\"orgId\": \"b\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch del under cc with no commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed49207a-9ae4-4007-bc70-b67ad935d8d3",
						"exec": [
							"",
							"pm.test(\"Status code is 400, cannot make branch in empty project\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"del\",\n\t\t\t\"name\": \"del\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "make a commit on project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d36d99cd-fbe6-4c92-87b6-e1f0eb56bbce",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"random\", \n\t\t\t\"name\": \"random\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch del under cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0325ce9e-c30e-477f-aab9-d8758634e65b",
						"exec": [
							"pm.test(\"branch created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('del');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"del\",\n\t\t\t\"name\": \"del\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete branch del",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b6de5b0-b034-409b-80ea-df66f0b19d1d",
						"exec": [
							"pm.test(\"branch deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('del');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/del",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"del"
					]
				}
			},
			"response": []
		},
		{
			"name": "get deleted branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77399dc3-4050-45a3-8294-f8260a1ae75d",
						"exec": [
							"  ",
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/del",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"del"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete branch master",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7a86176a-3184-4006-a0a3-569b2bb17846",
						"exec": [
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/master",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"master"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abb3c9ed-1253-4995-ae55-4ee7c844e306",
						"exec": [
							"pm.test(\"project soft deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04fa8662-a1f1-432a-b72b-d4dd88b5b1aa",
						"exec": [
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e6f3ffe-79bb-4590-8641-7b89e5862647",
						"exec": [
							"pm.test(\"Status code is 400, org not empty\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "hard delete project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "71465b31-1ae9-4ef8-a169-e840cf121fed",
						"exec": [
							"pm.test(\"project hard deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc?hard=true",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					],
					"query": [
						{
							"key": "hard",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete empty org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1bc086e-0f1e-4b6f-9800-9310faa52d70",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "get org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ae4761f-aed4-46d5-80f7-47549b65bbab",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "create webhook on project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "856ecf73-3d3a-4255-a5df-f388a1e41af8",
						"exec": [
							"pm.test(\"webhook created with returned id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks[0]).to.have.property('id');",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"webhooks\": [\n\t\t{\"url\": \"https://random.org\"}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get webhooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15105a63-b92e-411c-a281-0314518a2d1d",
						"exec": [
							"pm.test(\"project aa has one webhook\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks[0]).to.have.property('id');",
							"    pm.expect(jsonData.webhooks.length).to.eql(1);",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "012f9790-38f0-477d-ac49-a4e68a2695bf",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"webhooks\": [\n\t\t{\"url\": \"https://random.org\"}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get webhooks again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b430f618-c108-483a-ac70-aeaac672a376",
						"exec": [
							"pm.test(\"project aa has no webhooks\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks.length).to.eql(0);",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project with invalid schema",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6f21622a-a837-44c9-8823-a82279030fd2",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"projects\": [\r\n    {\r\n      \"orgId\": \"a\",\r\n      \"name\": \"string\",\r\n      \"id\": \"string\",\r\n      \"schema\":\"invalid\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0bdda746-83ff-4d2e-9c48-87f493ad63c6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "25cd1aee-336b-4efb-9265-54cdd8f6138f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}