{
	"info": {
		"_postman_id": "8e02bf5a-3000-415b-ab0c-a335f8c3ce4f",
		"name": "crud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login using admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dbfb2f53-bbfa-47d5-babc-9a90ca4777a7",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});",
							"",
							"pm.test(\"response has token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.environment.set(\"token\", jsonData.token);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{adminUsername}}\",\n\t\"password\": \"{{adminPassword}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/authentication",
					"host": [
						"{{host}}"
					],
					"path": [
						"authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f073480c-1c23-4aaa-aeee-098e496b532f",
						"exec": [
							"pm.test(\"response has org a\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql('a');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"id\": \"a\",\n\t\t\t\"name\": \"a\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get orgs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d9e35dd4-e07f-4615-8c9e-51aee30f3520",
						"exec": [
							"pm.test(\"response has at least 1 org\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs.length).to.be.at.least(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "65fe78d4-bc2d-452c-a398-5034ee07171b",
						"exec": [
							"pm.test(\"response has project aa\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('aa');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"aa\", \n\t\t\t\"name\": \"aa\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to add invalid project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c6e1ab4-9293-4046-974f-b408e4fac79f",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"invalid project\", \n\t\t\t\"name\": \"invalid project\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d38a254c-8415-460b-b98b-9c6f8de91c84",
						"exec": [
							"pm.test(\"response has at least 1 project\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects.length).to.be.at.least(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "update project aa metadata",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83464769-8f32-4e9d-9849-4cc30a73f3a1",
						"exec": [
							"pm.test(\"response has project aa\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('aa');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"aa\", \n\t\t\t\"extraField\": \"something\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c85f0a65-1bb2-4d9b-b24a-96cc1f72d3cd",
						"exec": [
							"pm.test(\"response has project aa with extra field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].extraField).to.eql('something');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa"
					]
				}
			},
			"response": []
		},
		{
			"name": "add elements to aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ed5b157-3676-4a07-ba30-3e96d1328cd8",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"});",
							"",
							"pm.environment.set(\"commitId1\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"x\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f038705f-9fa3-4f84-9952-044fc0fc42fb",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});",
							"",
							"pm.environment.set(\"commitId2\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated1\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x and y",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b48194cb-ed8e-43e4-81cf-918587d2bd4a",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitId3\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated2\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\",\n\t\t\t\"name\": \"updated2\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aaea2c03-c5b9-47c0-bfa4-3d33bdb3257f",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});",
							"",
							"pm.environment.set(\"commitId4\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated3\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "check ref commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1e71fd7-e309-4be4-a050-a26636e36009",
						"exec": [
							"pm.test(\"response has 4 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check x commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92241556-c482-4ee7-8ea2-bdbb8125f9d5",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/x/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"x",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check y commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad6e9548-d53e-4d6f-a5d7-4b308bcc129f",
						"exec": [
							"pm.test(\"response has 2 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/y/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"y",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check z commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb4ae3f4-b1a5-4781-82ae-9393c3a8de2e",
						"exec": [
							"pm.test(\"response has 2 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/z/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"z",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check first commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "990ae0d1-e50d-4f42-af50-04031812cbfa",
						"exec": [
							"pm.test(\"first commit has 3 added\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].added.length).to.eql(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/commits/{{commitId1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"commits",
						"{{commitId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get elements at second update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2bae385e-0899-4964-8bb8-8b87ee9028b8",
						"exec": [
							"pm.test(\"elements have expected names\", function () {",
							"    var jsonData = pm.response.json();",
							"    for (var e in jsonData.elements) {",
							"        var el = jsonData.elements[e];",
							"        if (el.id == 'x') {",
							"            pm.expect(el.name == 'updated2');",
							"        }",
							"        if (el.id == 'y') {",
							"            pm.expect(el.name == 'updated2');",
							"        }",
							"        if (el.id == 'z') {",
							"            pm.expect(el.name == 'z');",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements?commitId={{commitId3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					],
					"query": [
						{
							"key": "commitId",
							"value": "{{commitId3}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "398710ed-d623-4bc4-90d0-43cb1cbf3b7f",
						"exec": [
							"pm.test(\"branch created with right parentRef and commit id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('refa');",
							"    pm.expect(jsonData.refs[0].parentRefId).to.eql('master');",
							"    pm.expect(jsonData.refs[0].parentCommitId).to.eql(pm.environment.get(\"commitId4\"))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"refa\",\n\t\t\t\"name\": \"refa\",\n\t\t\t\"type\": \"Branch\",\n\t\t\t\"extraField\": \"something\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get branch refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14fae161-cef8-4d2a-a84d-9ddbd336f028",
						"exec": [
							"pm.test(\"branch refa has extraField\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].extraField).to.eql('something');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa"
					]
				}
			},
			"response": []
		},
		{
			"name": "create invalid branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d061063-cdf8-4047-825d-13de7cfa3305",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"invalid branch id\",\n\t\t\t\"name\": \"invalid branch\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch ref-a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e01f95cd-158b-4dac-960f-9281fba667dc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"ref-a\",\n\t\t\t\"name\": \"ref-a\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch ref-b from ref-a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74de6b67-421d-4019-93c4-878329978ff4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"ref-b\",\n\t\t\t\"name\": \"ref-b\",\n\t\t\t\"type\": \"Branch\",\n\t\t\t\"parentRefId\": \"ref-a\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "check inRefIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04cd8667-aa37-47a8-92a2-49f66e7d9a8a",
						"exec": [
							"pm.test(\"elements in new ref have right _inRefIds\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.elements.forEach(function(e) {",
							"        pm.expect(e._inRefIds).to.include('refa');",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x and y on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2028325c-3441-4420-b725-86af2cbdc79b",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitXYRef\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated4\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\",\n\t\t\t\"name\": \"updated4\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z on refa and add element q",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d3133fe-66e4-4b9b-9741-ddedbe4e1003",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitZQRef\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated5\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"q\",\n\t\t\t\"name\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z on master and add element p",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6ac4b958-5f84-40b0-929a-2b3179f95ee8",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitZP\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated6\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"p\",\n\t\t\t\"name\": \"p\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "check master commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb0c483b-c528-4933-926d-0bc2e930be57",
						"exec": [
							"pm.test(\"response has 5 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(5);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZP\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[4].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check refa commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9a67f4a3-298d-44f1-89c9-f1b29fa1c55c",
						"exec": [
							"pm.test(\"response has 6 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(6);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZQRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[4].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[5].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check x commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1e3946a-9058-4caf-888a-543ce9ff2c88",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check y commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29d6e0c3-d8a4-4ff3-a096-73de2d94c2a3",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/y/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"y",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check z commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48a6aabe-0b4f-436f-b8fd-334597e7110a",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZQRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/z/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"z",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest elements at refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69c1a087-5273-469c-bd19-d038817f95eb",
						"exec": [
							"pm.test(\"has 4 results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest elements at master",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dae17393-f0da-48b5-bc49-b6dde9151c8f",
						"exec": [
							"pm.test(\"has 4 results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get mix of elements at master with missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c73171a-a892-4291-981d-7f39c95c46cc",
						"exec": [
							"pm.test(\"has 3 results and 1 rejected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"    pm.expect(jsonData.rejected.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get mix of elements at refa with commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ef20d32-b272-4ae8-a676-70031989aeb1",
						"exec": [
							"pm.test(\"has 3 results and 2 rejected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"    pm.expect(jsonData.rejected.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}, {\n\t\t\t\"id\": \"p\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements?commitId={{commitXYRef}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					],
					"query": [
						{
							"key": "commitId",
							"value": "{{commitXYRef}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f668d836-927a-4d6f-8b5d-68f11993cda8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "get x on refa deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d719d00-20a4-4995-96ba-e9ee80b7ef8e",
						"exec": [
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "resurrect x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c986e214-b56c-4c3b-a722-2b1455d79cad",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response has element\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated4\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get resurrected x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b63c7ed-aae2-4b5c-b91e-f303e0f6c0a6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response has element\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "add ownerId for cameo element on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d593715-5bb2-4899-94e4-5fa40188752f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated7\",\n\t\t\t\"ownerId\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e53eec76-449c-42e5-a3ed-fdaf67de66ee",
						"exec": [
							"pm.test(\"response has org a\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql('b');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"id\": \"b\",\n\t\t\t\"name\": \"b\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project cc under org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12411399-f102-48e9-bb43-e5cd63015042",
						"exec": [
							"pm.test(\"response has project cc\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"cc\", \n\t\t\t\"name\": \"cc\",\n\t\t\t\"orgId\": \"b\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch del under cc with no commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4692feff-c75a-413b-8033-f5487311e95d",
						"exec": [
							"",
							"pm.test(\"Status code is 400, cannot make branch in empty project\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"del\",\n\t\t\t\"name\": \"del\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "make a commit on project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a78e7d6d-4580-4399-9d1b-85eb303eca9d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"random\", \n\t\t\t\"name\": \"random\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch del under cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8273c73-8fa3-4585-8551-f2c964273b3d",
						"exec": [
							"pm.test(\"branch created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('del');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"del\",\n\t\t\t\"name\": \"del\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete branch del",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c50d7b7f-86ed-4b5b-b3b5-a41948a6fe79",
						"exec": [
							"pm.test(\"branch deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('del');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/del",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"del"
					]
				}
			},
			"response": []
		},
		{
			"name": "get deleted branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1e52fdb-14d9-41d8-83ed-c9a5070de30e",
						"exec": [
							"  ",
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/del",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"del"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete branch master",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bac1fdf5-508c-41e0-a2f3-b795e2d2d6bd",
						"exec": [
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/master",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"master"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81bb85c3-a7e3-4daa-ad34-1ce5aec8cbba",
						"exec": [
							"pm.test(\"project soft deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c1f9bc9-7c38-4873-8e56-9a6fc1681b18",
						"exec": [
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5cf493af-d755-4f9a-bb8b-bcf20f91e798",
						"exec": [
							"pm.test(\"Status code is 400, org not empty\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "hard delete project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51d5bbf9-a7a6-45f1-ac66-93559a5535fe",
						"exec": [
							"pm.test(\"project hard deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc?hard=true",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					],
					"query": [
						{
							"key": "hard",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete empty org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed3a7b66-e2f3-4735-b9e5-385e4ead5465",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "get org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66d102a3-2cc6-48f4-a6ee-42fc89678bc9",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "create webhook on project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc488e17-b18e-40a3-8279-5901275c4921",
						"exec": [
							"pm.test(\"webhook created with returned id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks[0]).to.have.property('id');",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"webhooks\": [\n\t\t{\"url\": \"https://random.org\"}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get webhooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23f4cdb6-304e-4694-8e53-6d308d1dc18e",
						"exec": [
							"pm.test(\"project aa has one webhook\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks[0]).to.have.property('id');",
							"    pm.expect(jsonData.webhooks.length).to.eql(1);",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d456cf25-a811-407d-a49a-a2f70627a627",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"webhooks\": [\n\t\t{\"url\": \"https://random.org\"}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get webhooks again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6028196d-12f0-4516-8d7d-23c6e6d69b14",
						"exec": [
							"pm.test(\"project aa has no webhooks\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks.length).to.eql(0);",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project with invalid schema",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60d8f8d3-c1b8-4d72-8cdd-3c804cbf3745",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"projects\": [\r\n    {\r\n      \"orgId\": \"a\",\r\n      \"name\": \"string\",\r\n      \"id\": \"string\",\r\n      \"schema\":\"invalid\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10fccefe-0118-4aee-8753-b09e3605b255",
						"exec": [
							"pm.test(\"response has org c\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].name).to.eql('c');",
							"});",
							"",
							"pm.environment.set(\"orgIdC\", pm.response.json().orgs[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"name\": \"c\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get org c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e150fd0-a9f5-4b88-894b-814a886690d7",
						"exec": [
							"pm.test(\"response has at least 2 orgs\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs.length).to.be.at.least(2);",
							"});",
							"",
							"pm.test(\"org id number is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[1].id).to.eql(pm.environment.get(\"orgIdC\"))",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3a55851b-68ec-459b-a55e-d8c0c6470d05",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7997e11d-0bd7-4e0e-a3ac-486d9ff9b5fe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}